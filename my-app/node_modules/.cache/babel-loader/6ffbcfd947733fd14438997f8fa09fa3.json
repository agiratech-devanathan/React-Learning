{"ast":null,"code":"var _jsxFileName = \"/home/agira/agira_projects/React learning/React-Learning/my-app/src/components/Post/post.js\";\nimport './post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Component\n} = require(\"react\");\n\nconst {\n  default: SinglePost\n} = require(\"../SinglePost/single_post\");\n\nclass Post extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [{\n        id: '1',\n        title: 'post title 1',\n        description: 'Post description1'\n      }, {\n        id: '2',\n        title: 'post title 2',\n        description: 'Post description2'\n      }, {\n        id: '3',\n        title: 'post title 3',\n        description: 'Post description3'\n      }],\n      postTitle: 'Post List',\n      showPost: false,\n      count: true\n    };\n\n    this.togglePostHandler = () => {\n      this.setState({\n        showPost: !this.state.showPost\n      });\n    };\n  }\n\n  getPost() {\n    if (!this.state.showPost) return null; // outputing the list of data using map function\n    // let post=this.state.posts.map((post)=>(\n    //     <SinglePost id={post.id} title={post.title} description={post.description} />\n    // ));\n    // outputing the list of data using for loop\n\n    let post = [];\n\n    for (let loopPost of this.state.posts) {\n      post.push( /*#__PURE__*/_jsxDEV(SinglePost, {\n        id: loopPost.id,\n        title: loopPost.title,\n        description: loopPost.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: this.state.posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(SinglePost, {\n          title: post.title,\n          description: post.description\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    let post = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.count && 'show count'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.postTitle, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.togglePostHandler,\n          className: \"toggle-btn\",\n          children: this.state.showPost ? 'Hide post' : 'Show post'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), this.getPost()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/agira/agira_projects/React learning/React-Learning/my-app/src/components/Post/post.js"],"names":["Component","require","default","SinglePost","Post","state","posts","id","title","description","postTitle","showPost","count","togglePostHandler","setState","getPost","post","loopPost","push","map","index","render"],"mappings":"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","sourcesContent":["\n\nimport './post.css';\nconst { Component } = require(\"react\");\nconst { default: SinglePost } = require(\"../SinglePost/single_post\");\n\nclass Post extends Component {\n    state = {\n        posts: [\n            { id: '1', title: 'post title 1', description: 'Post description1' },\n            { id: '2', title: 'post title 2', description: 'Post description2' },\n            { id: '3', title: 'post title 3', description: 'Post description3' }\n        ],\n        postTitle: 'Post List',\n        showPost: false,\n        count: true\n    }\n\n    togglePostHandler = () => {\n        this.setState({\n            showPost: !this.state.showPost\n        })\n    }\n\n    getPost() {\n        if (!this.state.showPost) return null;\n        // outputing the list of data using map function\n        // let post=this.state.posts.map((post)=>(\n        //     <SinglePost id={post.id} title={post.title} description={post.description} />\n        // ));\n        // outputing the list of data using for loop\n        let post = [];\n        for (let loopPost of this.state.posts) {\n            post.push(\n                <SinglePost\n                    id={loopPost.id}\n                    title={loopPost.title}\n                    description={loopPost.description}\n                />\n            )\n        }\n\n        return (\n        <div className='post-content'>\n            {\n            this.state.posts.map((post,index)=>{\n                return (\n                    <SinglePost\n                    key={index}\n                    \n                    title={post.title}\n                    description={post.description}\n                />\n                );\n            })\n            }\n           \n        </div>\n        );\n    }\n    render() {\n        let post = null;\n\n        return (\n\n            <div className='post-container'>\n                <div>{this.state.count && 'show count'}</div>\n                <div className='post-header'>\n                    <h2>{this.state.postTitle} </h2>\n                </div>\n                <div className='update-btn-container'>\n                    <button\n                        onClick={this.togglePostHandler}\n                        className='toggle-btn'>{this.state.showPost ? 'Hide post' : 'Show post'}</button>\n                </div>\n                <hr />\n                {this.getPost()}\n            </div>\n        );\n    }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/agira/agira_projects/React learning/React-Learning/my-app/src/components/Post/post.js\";\nimport './post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  Component\n} = require(\"react\");\n\nconst {\n  default: SinglePost\n} = require(\"../SinglePost/single_post\");\n\nclass Post extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [{\n        title: 'post title 1',\n        description: 'Post description1'\n      }, {\n        title: 'post title 2',\n        description: 'Post description2'\n      }, {\n        title: 'post title 3',\n        description: 'Post description3'\n      }],\n      postTitle: 'Post List',\n      showPost: false,\n      count: true\n    };\n\n    this.togglePostHandler = () => {\n      this.setState({\n        showPost: !this.state.showPost\n      });\n    };\n  }\n\n  getPost() {\n    if (!this.state.showPost) return null; // outputing the list of data using map function\n\n    let post = this.state.posts.map(loopPost => {\n      /*#__PURE__*/\n      _jsxDEV(SinglePost, {\n        title: loopPost.title,\n        description: loopPost.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    let post = null;\n\n    if (this.state.showPost) {\n      post = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(SinglePost, {\n          title: this.state.posts[0].title,\n          description: this.state.posts[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SinglePost, {\n          title: this.state.posts[1].title,\n          description: this.state.posts[1].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.count && 'show count'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.postTitle, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.togglePostHandler,\n          className: \"toggle-btn\",\n          children: this.state.showPost ? 'Hide post' : 'Show post'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), this.getPost()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/agira/agira_projects/React learning/React-Learning/my-app/src/components/Post/post.js"],"names":["Component","require","default","SinglePost","Post","state","posts","title","description","postTitle","showPost","count","togglePostHandler","setState","getPost","post","map","loopPost","render"],"mappings":";AAEA,OAAO,YAAP;;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,OAAD,CAA7B;;AACA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAA0BF,OAAO,CAAC,2BAAD,CAAvC;;AAEA,MAAMG,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBK,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,WAAW,EAAE;AAAtC,OADG,EAEH;AAAGD,QAAAA,KAAK,EAAE,cAAV;AAA0BC,QAAAA,WAAW,EAAE;AAAvC,OAFG,EAGH;AAAED,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,WAAW,EAAE;AAAtC,OAHG,CADH;AAMJC,MAAAA,SAAS,EAAE,WANP;AAOJC,MAAAA,QAAQ,EAAE,KAPN;AAQJC,MAAAA,KAAK,EAAE;AARH,KADiB;;AAAA,SAYzBC,iBAZyB,GAYL,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAE,CAAC,KAAKL,KAAL,CAAWK;AADZ,OAAd;AAGH,KAhBwB;AAAA;;AAkBzBI,EAAAA,OAAO,GAAG;AACN,QAAI,CAAC,KAAKT,KAAL,CAAWK,QAAhB,EAA0B,OAAO,IAAP,CADpB,CAEN;;AACA,QAAIK,IAAI,GAAC,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAsBC,QAAD,IAAY;AAEtC;AAAA,cAAC,UAAD;AAAY,QAAA,KAAK,EAAEA,QAAQ,CAACV,KAA5B;AAAmC,QAAA,WAAW,EAAEU,QAAQ,CAACT;AAAzD;AAAA;AAAA;AAAA;AAAA;AACH,KAHQ,CAAT;AAIA,wBAAQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACHO;AADG;AAAA;AAAA;AAAA;AAAA,YAAR;AAGH;;AACDG,EAAAA,MAAM,GAAG;AACL,QAAIH,IAAI,GAAG,IAAX;;AACA,QAAI,KAAKV,KAAL,CAAWK,QAAf,EAAyB;AACrBK,MAAAA,IAAI,gBAAI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACJ,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,KAAvC;AAA8C,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBE;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,KAAvC;AAA8C,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBE;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAIH;;AACD,wBAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA,kBAAM,KAAKH,KAAL,CAAWM,KAAX,IAAoB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,qBAAK,KAAKN,KAAL,CAAWI,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AACI,UAAA,OAAO,EAAE,KAAKG,iBADlB;AAEI,UAAA,SAAS,EAAC,YAFd;AAAA,oBAE4B,KAAKP,KAAL,CAAWK,QAAX,GAAsB,WAAtB,GAAoC;AAFhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ,EAuBK,KAAKI,OAAL,EAvBL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA4BH;;AAjEwB;;AAoE7B,eAAeV,IAAf","sourcesContent":["\n\nimport './post.css';\nconst { Component } = require(\"react\");\nconst { default: SinglePost } = require(\"../SinglePost/single_post\");\n\nclass Post extends Component {\n    state = {\n        posts: [\n            { title: 'post title 1', description: 'Post description1' },\n            {  title: 'post title 2', description: 'Post description2' },\n            { title: 'post title 3', description: 'Post description3' }\n        ],\n        postTitle: 'Post List',\n        showPost: false,\n        count: true\n    }\n\n    togglePostHandler = () => {\n        this.setState({\n            showPost: !this.state.showPost\n        })\n    }\n\n    getPost() {\n        if (!this.state.showPost) return null;\n        // outputing the list of data using map function\n        let post=this.state.posts.map((loopPost)=>{\n           \n            <SinglePost title={loopPost.title} description={loopPost.description} />\n        })\n        return (<div className='post-content'>\n            {post}\n        </div>)\n    }\n    render() {\n        let post = null;\n        if (this.state.showPost) {\n            post = (<div className='post-content'>\n                <SinglePost title={this.state.posts[0].title} description={this.state.posts[0].description} />\n                <SinglePost title={this.state.posts[1].title} description={this.state.posts[1].description} />\n            </div>)\n        }\n        return (\n\n            <div className='post-container'>\n                <div>{this.state.count && 'show count'}</div>\n                <div className='post-header'>\n                    <h2>{this.state.postTitle} </h2>\n                </div>\n                <div className='update-btn-container'>\n                    <button\n                        onClick={this.togglePostHandler}\n                        className='toggle-btn'>{this.state.showPost ? 'Hide post' : 'Show post'}</button>\n                </div>\n                <hr />\n                {/* {post} */}\n                {/* this is one of the method to show element using ternary operators */}\n                {/* {this.state.showPost ? (<div className='post-content'>\n                    <SinglePost title={this.state.posts[0].title} description={this.state.posts[0].description} />\n                    <SinglePost title={this.state.posts[1].title} description={this.state.posts[1].description} />\n                </div>) : null} */}\n                {/* this is another of the method to show element using ternary operators without else part using && symbol */}\n                {/* {this.state.showPost && (<div className='post-content'>\n                    <SinglePost title={this.state.posts[0].title} description={this.state.posts[0].description} />\n                    <SinglePost title={this.state.posts[1].title} description={this.state.posts[1].description} />\n                </div>)} */}\n                {/* this is another of the method to show element using function if else operators*/}\n                {this.getPost()}\n            </div>\n        );\n    }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}